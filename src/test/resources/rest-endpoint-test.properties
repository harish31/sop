global.service.scheme=http
#Used to limit the number of productIds to substitution service
substitution.service.host=localhost
substitution.service.port=80
substitution.service.path=/api/v1/products/{productIds}/substitutions
substitution.supplier.service.path=/api/v1/products/{productIds}/supplier/{supplierId}/substitutions
nestedsubstitution.service.path=/api/v1/product/{productId}/supplier/{supplierId}/nestedSubstitutions


#Details for connecting to order service
order.service.host=localhost
order.service.port=80
order.service.path=/webapi/order/search

#Details for connecting to product supplier service
product.supplier.service.host=localhost
product.supplier.service.context=/product-supplier
product.supplier.service.port=80
product.supplier.service.path=${product.supplier.service.context}/v1/products/{productId}/suppliers/{supplierId}
product.supplier.service.url.retrieve.product.supplier=${product.supplier.service.context}/v1/products/{productId}/suppliers/{supplierIds}
product.supplier.service.url.retrieve.products.supplier=${product.supplier.service.context}/v1/products/{productIds}/supplier/{supplierId}
product.supplier.service.url.retrieve.products.suppliers=${product.supplier.service.context}/v1/products-suppliers

#Details for connecting to product supplier dimension service
product.supplier.dimension.service.host=localhost
product.supplier.dimension.service.port=80
product.supplier.dimension.service.path=${product.supplier.service.context}/v1/products/{productId}/suppliers/{supplierIds}/dimensions
product.supplier.dimensions.service.path=${product.supplier.service.context}/v1/products-suppliers/dimensions

#Details for connecting to supplier service
#Details for connecting to product master service
product.master.service.host=localhost
product.master.service.port=80
product.master.service.path=/api/v1/products/{productIds}

#Details for connecting to product master service
#Details for connecting to product customer service
product.customer.service.host=localhost
product.customer.service.context=/product-customer
product.customer.service.port=80
product.customer.service.path=/api/v1/products/{productIds}/customers/{customerIds}
product.authorization.by.customers=${product.customer.service.context}/v1/product/{productId}/customers/{customerIds}

#Details for connecting to product customer service
#/products/{productIds}/customers/{customerIds}
supplier.service.host=localhost
supplier.service.service.context=/supplier-master
supplier.service.port=80
supplier.service.path=${supplier.service.service.context}/v1/suppliers/{supplierIds}
supplier.container.service.path=${supplier.service.service.context}/v1/suppliers/{supplierId}/sections/{sectionIds}/containers
supplier.distCenterId.service.path=${supplier.service.service.context}/v1/distCenterId/{distCenterId}/suppliers

#Details for connecting to attribute management service to get rounding rules
attributes.rules.service.host=localhost
attributes.rules.service.context=/attribute-master
attributes.rules.service.port=80
attributes.rules.service.path=${attributes.rules.service.context}/v1/fetch-product-rules
attributes.rules.auto.hold.service.path=${attributes.rules.service.context}/v1/fetch-auto-hold-rules

#Details to get the product details
product.service.host=localhost
product.service.context=/product-master
product.service.port=80
product.service.path=${product.service.context}/v1/products/{productIds}

#Details for connecting to customer Order service
customer.order.service.host=localhost
customer.order.service.context=/customer-order-processor
customer.order.service.port=80
customer.order.service.orderById.path=${customer.order.service.context}/v1/orders/{orderId}

#Details for connecting to supplier Order service
supplier.order.service.host=localhost
supplier.order.service.context=/supplier-order-processor
supplier.order.service.port=80
supplier.order.service.orderById.path=${supplier.order.service.context}/v1/manage/order/{orderId}
supplier.order.service.scheduleInfoByOrderId.path=${supplier.order.service.context}/v1/scheduleinfo/orders/{orderId}

#global properties
global.log.path=logs/

#Inventory Service Details
inventory.service.host=localhost
inventory.service.port=80
inventory.service.url.retrieve.inventory=/inventory-master/v1/products/{productIds}/suppliers/{supplierIds}
inventory.service.url.get.boh=/inventory-master/v1/suppliers/{supplierId}/products/{productIds}
inventory.service.url.retrieve.inventory.by.supplier=/inventory-master/v1/products/suppliers/
        

#Details for connecting to timewheel service
timewheel.service.host=localhost
timewheel.service.context=/timewheel
timewheel.service.port=80
timewheel.service.getScheduleInfo.path=${timewheel.service.context}/v1/inbound/schedule
timewheel.service.getRouteCodeInfo.path=${timewheel.service.context}/v2/inbound/routeCodeLookup
timewheel.service.getScheduledCustomer.path=${timewheel.service.context}/v2/inbound/schedule/customer

#Details for connecting to tog service
tog.service.host=localhost
tog.service.context=/tog
tog.service.port=80
tog.service.path=${tog.service.context}/v1/togAssociations/search

#Details for connection Release Schedule Service
release.schedule.service.host=
release.schedule.service.port=80
release.schedule.service.path=
release.schedule.service.url.get.release.schedule=

#Details for connecting to auditor service
auditor.service.host=localhost
auditor.service.context=/auditor
auditor.service.port=80
auditor.service.order.audit.path=${auditor.service.context}/v1/auditOrder/{orderId}

#Details for connecting to Ecxeption Manager service
exception.manager.service.host=localhost
exception.manager.service.context=/exception-manager
exception.manager.service.port=80
exception.manager.service.url.retrieve.order.error.log=${exception.manager.service.context}/v1/exceptionManager/supplier/{supplierOrderId}
exception.manager.service.url.retrieve.cop.sop.order.error.log=${exception.manager.service.context}/v1/exceptionManager/supplier/{supplierOrderId}/customer/{customerOrderId}

#Details for connecting to customer service
customer.master.service.host=localhost
customer.master.service.context=/customer-master
customer.master.service.port=80
customer.master.service.groupsByCustomer.path=${customer.master.service.context}/v1/customers/{customerIds}/groups
customer.master.service.customersByOrderGroup.path=${customer.master.service.context}/v1/customers/groups/{groupId}
customer.master.service.customersByCustomerIds.path=${customer.master.service.context}/v1/customers/{customerIds}
customer.master.service.customersByGroups.path=${customer.master.service.context}/v1/customers/groups/{groupIds}
customer.master.service.customersByDivisionId.path=${customer.master.service.context}/v1/divisions/{divisionId}/customers

rest.client.http.protocol=http
rest.client.sos.host=localhost
rest.client.sos.context=/source-of-supply
rest.client.sos.port=80
rest.client.sos.path=${rest.client.sos.context}/v1/sos/customerId/{customerId}/cogId/{cogId}
rest.client.sos.getValidCOGIdsForSupplier.path=${rest.client.sos.context}/v1/sos/supplierId/{supplierId}

#access management
access.management.service.host=localhost
access.management.service.context=/access-management
access.management.service.port=80
access.management.service.path=${access.management.service.context}/v1/users/{userId}
access.management.service.get.userGroups.path=${access.management.service.context}/v1/users/{userId}/groups